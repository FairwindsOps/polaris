---
# Source: polaris/templates/0-namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: polaris
---
# Source: polaris/templates/configmap.yaml

apiVersion: v1
kind: ConfigMap
metadata:
  name: polaris
  namespace: polaris
  labels:
    app: polaris
data:
  config.yaml: |
    |-
      checks:
        # reliability
        multipleReplicasForDeployment: ignore
        # resources
        cpuRequestsMissing: warning
        cpuLimitsMissing: warning
        memoryRequestsMissing: warning
        memoryLimitsMissing: warning
        # images
        tagNotSpecified: error
        pullPolicyNotAlways: ignore
        # healthChecks
        readinessProbeMissing: warning
        livenessProbeMissing: warning
        # networking
        hostNetworkSet: warning
        hostPortSet: warning
        # security
        hostIPCSet: error
        hostPIDSet: error
        notReadOnlyRootFilesystem: warning
        privilegeEscalationAllowed: error
        runAsRootAllowed: warning
        runAsPrivileged: error
        dangerousCapabilities: error
        insecureCapabilities: warning
    
      exemptions:
        - controllerNames:
            - kube-apiserver
            - kube-proxy
            - kube-scheduler
            - etcd-manager-events
            - kube-controller-manager
            - kube-dns
            - etcd-manager-main
          rules:
            - hostPortSet
            - hostNetworkSet
            - readinessProbeMissing
            - livenessProbeMissing
            - cpuRequestsMissing
            - cpuLimitsMissing
            - memoryRequestsMissing
            - memoryLimitsMissing
            - runAsRootAllowed
            - runAsPrivileged
            - notReadOnlyRootFilesystem
            - hostPIDSet
    
        - controllerNames:
            - kube-flannel-ds
          rules:
            - notReadOnlyRootFilesystem
            - runAsRootAllowed
            - notReadOnlyRootFilesystem
            - readinessProbeMissing
            - livenessProbeMissing
            - cpuLimitsMissing
    
        - controllerNames:
            - cert-manager
          rules:
            - notReadOnlyRootFilesystem
            - runAsRootAllowed
            - readinessProbeMissing
            - livenessProbeMissing
    
        - controllerNames:
            - cluster-autoscaler
          rules:
            - notReadOnlyRootFilesystem
            - runAsRootAllowed
            - readinessProbeMissing
    
        - controllerNames:
            - vpa
          rules:
            - runAsRootAllowed
            - readinessProbeMissing
            - livenessProbeMissing
            - notReadOnlyRootFilesystem
    
        - controllerNames:
            - datadog
          rules:
            - runAsRootAllowed
            - readinessProbeMissing
            - livenessProbeMissing
            - notReadOnlyRootFilesystem
    
        - controllerNames:
            - nginx-ingress-controller
          rules:
            - privilegeEscalationAllowed
            - insecureCapabilities
            - runAsRootAllowed
    
        - controllerNames:
            - dns-controller
            - datadog-datadog
            - kube-flannel-ds
            - kube2iam
            - aws-iam-authenticator
            - datadog
            - kube2iam
          rules:
            - hostNetworkSet
    
        - controllerNames:
            - aws-iam-authenticator
            - aws-cluster-autoscaler
            - kube-state-metrics
            - dns-controller
            - external-dns
            - dnsmasq
            - autoscaler
            - kubernetes-dashboard
            - install-cni
            - kube2iam
          rules:
            - readinessProbeMissing
            - livenessProbeMissing
    
        - controllerNames:
            - aws-iam-authenticator
            - nginx-ingress-default-backend
            - aws-cluster-autoscaler
            - kube-state-metrics
            - dns-controller
            - external-dns
            - kubedns
            - dnsmasq
            - autoscaler
            - tiller
            - kube2iam
          rules:
            - runAsRootAllowed
    
        - controllerNames:
            - aws-iam-authenticator
            - nginx-ingress-controller
            - nginx-ingress-default-backend
            - aws-cluster-autoscaler
            - kube-state-metrics
            - dns-controller
            - external-dns
            - kubedns
            - dnsmasq
            - autoscaler
            - tiller
            - kube2iam
          rules:
            - notReadOnlyRootFilesystem
    
        - controllerNames:
            - cert-manager
            - dns-controller
            - kubedns
            - dnsmasq
            - autoscaler
            - insights-agent-goldilocks-vpa-install
            - datadog
          rules:
            - cpuRequestsMissing
            - cpuLimitsMissing
            - memoryRequestsMissing
            - memoryLimitsMissing
    
        - controllerNames:
            - kube2iam
            - kube-flannel-ds
          rules:
            - runAsPrivileged
    
        - controllerNames:
            - kube-hunter
          rules:
            - hostPIDSet
    
        - controllerNames:
            - polaris
            - kube-hunter
            - goldilocks
            - insights-agent-goldilocks-vpa-install
          rules:
            - notReadOnlyRootFilesystem
    
        - controllerNames:
            - insights-agent-goldilocks-controller
          rules:
            - livenessProbeMissing
            - readinessProbeMissing
    
        - controllerNames:
            - insights-agent-goldilocks-vpa-install
            - kube-hunter
          rules:
            - runAsRootAllowed
    

---
# Source: polaris/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: polaris
  namespace: polaris
  labels:
    app: polaris
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: polaris-view
  labels:
    app: polaris
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: view
subjects:
  - kind: ServiceAccount
    name: polaris
    namespace: polaris
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: polaris
  labels:
    app: polaris
rules:
  # required by controller-runtime code doing a cluster wide lookup
  # when it seems namespace would suffice
  - apiGroups:
      - ''
    resources:
      - 'nodes'
    verbs:
      - 'get'
      - 'list'
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: polaris
  labels:
    app: polaris
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: polaris
subjects:
  - kind: ServiceAccount
    name: polaris
    namespace: polaris

---
# Source: polaris/templates/dashboard.service.yaml
apiVersion: v1
kind: Service
metadata:
  name: polaris-dashboard
  namespace: polaris
  labels:
    app: polaris
  annotations:
spec:
  ports:
  - name: http-dashboard
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: polaris
    component: dashboard
  type: ClusterIP
---
# Source: polaris/templates/dashboard.deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: polaris-dashboard
  namespace: polaris
  labels:
    app: polaris
    component: dashboard
spec:
  replicas: 1
  selector:
    matchLabels:
      app: polaris
      component: dashboard
  template:
    metadata:
      annotations:
        checksum/config: '6d81e17a247f6863b8a02224ffbfa309b583aa9d26e4ecf4098d00796652f844'
      labels:
        app: polaris
        component: dashboard
    spec:
      volumes:
      - name: config
        configMap:
          name: polaris
      containers:
      - command:
        - polaris
        - dashboard
        - --config
        - /opt/app/config.yaml
        image: 'quay.io/fairwinds/polaris:1'
        imagePullPolicy: 'Always'
        name: dashboard
        ports:
        - containerPort: 8080
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 20
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 128Mi
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          capabilities:
            drop:
              - ALL
        volumeMounts:
        - name: config
          mountPath: /opt/app/config.yaml
          subPath: config.yaml
          readOnly: true
      serviceAccountName: polaris
      nodeSelector:
      tolerations:
---
# Source: polaris/templates/audit.job.yaml

---
# Source: polaris/templates/audit.rbac.yaml

---
# Source: polaris/templates/ingress.yaml

---
# Source: polaris/templates/webhook.deployment.yaml

---
# Source: polaris/templates/webhook.rbac.yaml

---
# Source: polaris/templates/webhook.secret.yaml

---
# Source: polaris/templates/webhook.service.yaml


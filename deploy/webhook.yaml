---
# Source: polaris/templates/0-namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: polaris
---
# Source: polaris/templates/webhook.secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: polaris-webhook
  namespace: polaris
  labels:
    app: polaris
type: Opaque
stringData:
  cert.pem: ''
---
# Source: polaris/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: polaris
  namespace: polaris
  labels:
    app: polaris
data:
  config.yaml:  |
    resources:
      cpuRequestsMissing: warning
      cpuLimitsMissing: warning
      memoryRequestsMissing: warning
      memoryLimitsMissing: warning
    images:
      tagNotSpecified: error
    healthChecks:
      readinessProbeMissing: warning
      livenessProbeMissing: warning
    networking:
      hostNetworkSet: warning
      hostPortSet: warning
    security:
      hostIPCSet: error
      hostPIDSet: error
      notReadOnlyRootFileSystem: warning
      privilegeEscalationAllowed: error
      runAsRootAllowed: warning
      runAsPrivileged: error
      capabilities:
        error:
          ifAnyAdded:
            - SYS_ADMIN
            - NET_ADMIN
            - ALL
        warning:
          ifAnyAddedBeyond:
            - CHOWN
            - DAC_OVERRIDE
            - FSETID
            - FOWNER
            - MKNOD
            - NET_RAW
            - SETGID
            - SETUID
            - SETFCAP
            - SETPCAP
            - NET_BIND_SERVICE
            - SYS_CHROOT
            - KILL
            - AUDIT_WRITE
  
---
# Source: polaris/templates/webhook.rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: polaris-webhook
  namespace: polaris
  labels:
    app: polaris
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: polaris-webhook
  labels:
    app: polaris
rules:
  - apiGroups:
      - 'apps'
      - 'extensions'
    resources:
      - 'deployments'
    verbs:
      - 'get'
      - 'list'
  # required by controller-runtime code doing a cluster wide lookup
  # when it seems namespace would suffice
  - apiGroups:
      - ''
    resources:
      - 'secrets'
      - 'services'
    verbs:
      - 'get'
      - 'list'
      - 'watch'
  - apiGroups:
      - 'admissionregistration.k8s.io'
    resources:
      - 'validatingwebhookconfigurations'
    verbs:
      - '*'
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: polaris-webhook
  labels:
    app: polaris
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: polaris-webhook
subjects:
  - kind: ServiceAccount
    name: polaris-webhook
    namespace: polaris
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: polaris-webhook
  namespace: polaris
  labels:
    app: polaris
rules:
  # required for current controller-runtime bootstrap method
  - apiGroups:
      - ''
    resources:
      - 'secrets'
      - 'services'
    verbs:
      - '*'
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: polaris-webhook
  namespace: polaris
  labels:
    app: polaris
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: polaris-webhook
subjects:
  - kind: ServiceAccount
    name: polaris-webhook
    namespace: polaris
---
# Source: polaris/templates/webhook.service.yaml
apiVersion: v1
kind: Service
metadata:
  name: polaris-webhook
  namespace: polaris
  labels:
    app: polaris
spec:
  ports:
  - name: webhook
    port: 443
    protocol: TCP
    targetPort: 9876
  selector:
    app: polaris
    component: webhook
  type: ClusterIP
---
# Source: polaris/templates/webhook.deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    checksum/config: '6ec4a4dc87403cae67c01438398a5f1d4ef836ffeaf26a33b685c066b940495a'
  name: polaris-webhook
  namespace: polaris
  labels:
    app: polaris
    component: webhook
spec:
  replicas: 1
  selector:
    matchLabels:
      app: polaris
      component: webhook
  template:
    metadata:
      labels:
        app: polaris
        component: webhook
    spec:
      containers:
        - name: webhook
          command:
            - polaris
            - --webhook
          image: 'quay.io/reactiveops/polaris:0.1.0'
          imagePullPolicy: 'Always'
          ports:
            - containerPort: 9876
          # These are fairly useless readiness/liveness probes for now
          # Follow this issue for potential improvements:
          # https://github.com/kubernetes-sigs/controller-runtime/issues/356
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - ps -ef | grep polaris
            initialDelaySeconds: 5
            periodSeconds: 5
          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - ps -ef | grep polaris
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            capabilities:
              drop:
                - ALL
          volumeMounts:
            - name: config
              mountPath: /opt/app/config.yaml
              subPath: config.yaml
              readOnly: true
            - name: secret
              mountPath: /opt/cert/
              readOnly: true
            - name: cr-logs
              mountPath: /tmp/
              readOnly: false
      serviceAccountName:  polaris-webhook
      volumes:
        - name: config
          configMap:
            name: polaris
        - name: secret
          secret:
            secretName: polaris-webhook
        - name: cr-logs
          emptyDir: {}
---
# Source: polaris/templates/dashboard.deployment.yaml

---
# Source: polaris/templates/dashboard.rbac.yaml

---
# Source: polaris/templates/dashboard.service.yaml

